scalar Time

type TextMessage {
    messageId: String!
    chatId: String!
    userNick: String
    user: String!
    timeStamp: Time!
    text: String!
}

type Friend {
    nick: String
    userID: String!
    userIP: String
    userAvatar: String
    # online or offline
    status: Boolean
}

type Chat {
    chatId: String!
    clientsIPsList: [String!]!
    latestMessage: TextMessage
    chatAvatar: String
    # change to Boolean
    clientWriting: String
    chatName: String
}
# last read

type Mutation {
    postMessage(chatID: String!, text: String!): TextMessage
    createChat(users: [String!]!): Chat
    clientWriting(chatID: String!, userId: String!): String
    changeChatAvatar(chatID: String!, avatarAddr: String!): String
    changeChatName(chatID: String!, chatName: String!): String
    changeNick(userNick: String!): String
    addFriend(userUUID: String!): String
}

type Query {
    messages(chatID: String!): [TextMessage!]
    chatUsers(chatID: String!): [String!]!
    chats: [Chat]!
    # getChat(chatID: String!): Chat
    fetchMessages(chatID: String!, numOfMessages: Int!): [TextMessage!]
    getFriendList: [String]
    getFriendsTypeList: [Friend]
    getUserName: String!
}

type Subscription {
    messagePosted(chatID: String!): TextMessage!
    userJoined(chatID: String!): String!
    chatCreated: Chat!
    newChatLastMessage(chatID: String!): String
    clientWritingAlert(chatID: String!): String
    newFriend: Friend
}
